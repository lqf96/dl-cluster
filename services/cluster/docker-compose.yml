version: "3.9"
configs:
  cluster-master-config:
    file: ../../etc/determined/master.yaml
    template_driver: golang
  cluster-agent-config:
    file: ../../etc/determined/agent.yaml
networks:
  default:
    name: dl-cluster
    external: true
secrets:
  db-passwd:
    file: ../../secrets/db-passwd
volumes:
  dl-cluster-db:
x-master-service: &master-service
  deploy:
    placement:
      constraints:
        - node.hostname==${DL_CLUSTER_MASTER}
    mode: global
    restart_policy:
      condition: on-failure
      delay: 5s
services:
  db:
    <<: *master-service
    image: postgres:10
    environment:
      - POSTGRES_DB=determined
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-passwd
    secrets:
      - db-passwd
    volumes:
      - dl-cluster-db:/var/lib/postgresql/data
  master:
    <<: *master-service
    image: ${DL_DET_IMAGE_NS}/determined-master:${DL_DET_VERSION}
    configs:
      - source: cluster-master-config
        target: /etc/determined/master.yaml
    environment:
      - DL_SHARED_DIR
      - DL_CLUSTER_ENV
    secrets:
      - db-passwd
  agent:
    image: ${DL_DET_IMAGE_NS}/determined-agent:${DL_DET_VERSION}
    configs:
      - source: cluster-agent-config
        target: /etc/determined/agent.yaml
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  reverse-proxy:
    <<: *master-service
    image: cloudflare/cloudflared
    command: tunnel run --url http://master:8080 ${DL_CF_TUNNEL}
    volumes:
      - ../../secrets/cloudflared:/etc/cloudflared
